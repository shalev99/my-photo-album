{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tal\\\\Documents\\\\GitHub\\\\my-photo-album\\\\frontend\\\\src\\\\components\\\\fileForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileForm = () => {\n  _s();\n  // Explicitly define the type of pictureFile as File | null\n  const [pictureName, setPictureName] = useState('');\n  const [pictureDate, setPictureDate] = useState('');\n  const [pictureDescription, setPictureDescription] = useState('');\n  const [pictureFile, setPictureFile] = useState(null); // Updated type\n\n  const handleFileChange = e => {\n    if (e.target.files) {\n      setPictureFile(e.target.files[0]);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!pictureName || !pictureFile) {\n      alert('Picture Name and Picture File are mandatory!');\n      return;\n    }\n\n    // Prepare form data for submission\n    const formData = new FormData();\n    formData.append('pictureName', pictureName);\n    formData.append('pictureDate', pictureDate);\n    formData.append('pictureDescription', pictureDescription);\n    formData.append('pictureFile', pictureFile); // pictureFile is a File type\n\n    // Send data to the server\n    fetch('https://localhost:5162/api/files', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log('Picture uploaded successfully:', data);\n    }).catch(error => {\n      console.error('Error uploading picture:', error);\n    });\n  };\n  const handleReset = () => {\n    setPictureName('');\n    setPictureDate('');\n    setPictureDescription('');\n    setPictureFile(null); // Reset to null\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Picture Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pictureName,\n        onChange: e => setPictureName(e.target.value),\n        maxLength: 50,\n        required: true,\n        placeholder: \"Enter picture name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Picture Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: pictureDate,\n        onChange: e => setPictureDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Picture Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pictureDescription,\n        onChange: e => setPictureDescription(e.target.value),\n        maxLength: 250,\n        placeholder: \"Enter picture description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Picture File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pictureFile ? pictureFile.name : '',\n        readOnly: true,\n        placeholder: \"No file selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          var _document$getElementB;\n          return (_document$getElementB = document.getElementById('fileInput')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n        },\n        children: \"Picture Browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(FileForm, \"fP7o3qBt8TMou34btl5Uax3Ybng=\");\n_c = FileForm;\nexport default FileForm;\nvar _c;\n$RefreshReg$(_c, \"FileForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileForm","_s","pictureName","setPictureName","pictureDate","setPictureDate","pictureDescription","setPictureDescription","pictureFile","setPictureFile","handleFileChange","e","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","handleReset","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","maxLength","required","placeholder","name","readOnly","onClick","_document$getElementB","document","getElementById","click","id","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Tal/Documents/GitHub/my-photo-album/frontend/src/components/fileForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FileForm = () => {\r\n    // Explicitly define the type of pictureFile as File | null\r\n    const [pictureName, setPictureName] = useState('');\r\n    const [pictureDate, setPictureDate] = useState('');\r\n    const [pictureDescription, setPictureDescription] = useState('');\r\n    const [pictureFile, setPictureFile] = useState<File | null>(null); // Updated type\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            setPictureFile(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!pictureName || !pictureFile) {\r\n            alert('Picture Name and Picture File are mandatory!');\r\n            return;\r\n        }\r\n\r\n        // Prepare form data for submission\r\n        const formData = new FormData();\r\n        formData.append('pictureName', pictureName);\r\n        formData.append('pictureDate', pictureDate);\r\n        formData.append('pictureDescription', pictureDescription);\r\n        formData.append('pictureFile', pictureFile); // pictureFile is a File type\r\n\r\n        // Send data to the server\r\n        fetch('https://localhost:5162/api/files', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log('Picture uploaded successfully:', data);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error uploading picture:', error);\r\n        });\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setPictureName('');\r\n        setPictureDate('');\r\n        setPictureDescription('');\r\n        setPictureFile(null); // Reset to null\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>Picture Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={pictureName}\r\n                    onChange={(e) => setPictureName(e.target.value)}\r\n                    maxLength={50}\r\n                    required\r\n                    placeholder=\"Enter picture name\"\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Picture Date:</label>\r\n                <input\r\n                    type=\"datetime-local\"\r\n                    value={pictureDate}\r\n                    onChange={(e) => setPictureDate(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Picture Description:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={pictureDescription}\r\n                    onChange={(e) => setPictureDescription(e.target.value)}\r\n                    maxLength={250}\r\n                    placeholder=\"Enter picture description\"\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Picture File:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={pictureFile ? pictureFile.name : ''}\r\n                    readOnly\r\n                    placeholder=\"No file selected\"\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => document.getElementById('fileInput')?.click()}\r\n                >\r\n                    Picture Browser\r\n                </button>\r\n                <input\r\n                    id=\"fileInput\"\r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    onChange={handleFileChange}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"submit\">Add Picture</button>\r\n                <button type=\"button\" onClick={handleReset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FileForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}