{"ast":null,"code":"import { create } from 'zustand';\nexport const usefilesStore = create(set => ({\n  files: [],\n  fetchfiles: async () => {\n    try {\n      const res = await fetch('https://localhost:7061/api/files', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors' // Explicitly set to CORS\n      });\n      if (!res.ok) {\n        throw new Error('Failed to fetch files');\n      }\n      set({\n        files: await res.json()\n      });\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  }\n}));","map":{"version":3,"names":["create","usefilesStore","set","files","fetchfiles","res","fetch","method","headers","mode","ok","Error","json","error","console"],"sources":["C:/Users/Tal/Documents/GitHub/my-photo-album/frontend/src/store/usefilesStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\n\r\ninterface Files {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    fileName: string;\r\n    fileSize: number; \r\n    fileType: string; \r\n    uploadDate: string | Date; \r\n    fileContent: string;\r\n}\r\n\r\ninterface filesStore {\r\n    files: Files[];\r\n    fetchfiles: () => Promise<void>;\r\n}\r\n\r\nexport const usefilesStore = create<filesStore>((set) => ({\r\n    files: [],\r\n    fetchfiles: async () => {\r\n        try {\r\n            const res = await fetch('https://localhost:7061/api/files', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                mode: 'cors', // Explicitly set to CORS\r\n            });\r\n            if (!res.ok) {\r\n                throw new Error('Failed to fetch files');\r\n            }\r\n            set({ files: await res.json() });\r\n        } catch (error) {\r\n            console.error('Fetch error:', error);\r\n        }\r\n    }\r\n}));\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAkBhC,OAAO,MAAMC,aAAa,GAAGD,MAAM,CAAcE,GAAG,KAAM;EACtDC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QACxDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAE,MAAM,CAAE;MAClB,CAAC,CAAC;MACF,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACAT,GAAG,CAAC;QAAEC,KAAK,EAAE,MAAME,GAAG,CAACO,IAAI,CAAC;MAAE,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ;AACJ,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}